worker_processes  auto;
rtmp_auto_push off;

events {
    worker_connections  1024;
}

http {
    include mime.types;
    sendfile on;
    ##

    # redirect http requests to https
    server {
        listen 8080;
        server_name bfpstream.duckdns.org;
        return 301 https://bfpstream.duckdns.org:8443$request_uri;
    }
 
    # serve static content and video fragments
    server {
        listen 8443 ssl;
        server_name bfpstream.duckdns.org;
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/privkey.pem;
        ssl_dhparam /etc/ssl/certs/dhparams.pem;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

        ### dash start ##############################################
        location /dash {
            root /tmp;
            autoindex on;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            expires off;
        }
        ### dash end ################################################

        ### hls start ###############################################
        location /hls {
            root /tmp;
            autoindex on;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            expires off;
        }
        ### hls end #################################################

        ### rtmp stats start ########################################
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet /stat.xsl;
        }
        ### rtmp stats end ##########################################

        ### static content start ####################################
        location / {
            autoindex on;
            root html;        }
        ### static content end ######################################
    }
}

# rtmp configuration: https://github.com/arut/nginx-rtmp-module/wiki/Directives
rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        ### rtmp dash start #########################################
        application dash {
            # Live settings: https://github.com/arut/nginx-rtmp-module/wiki/Directives#live
            live on;                  # live mode (one-to-many)
            record off;               # turn off recording to flv

            # Access settings: https://github.com/arut/nginx-rtmp-module/wiki/Directives#access
            allow publish 127.0.0.1;
            allow publish 172.17.0.0/16;
            deny publish all;
            deny play all;            # disable directly consuming through rtmp

            # Dash settings: https://github.com/arut/nginx-rtmp-module/wiki/Directives#mpeg-dash
            dash on;                  # enable mpeg dash
            dash_path /tmp/dash;      # dash fragments path
            dash_nested on;           # one subdirectory for each stream
            dash_fragment 2;          # length of dash fragment in sec
            dash_playlist_length 20;  # length of dash playlist in sec
            dash_cleanup on;          # use nginx cache manager to remove old fragments

            ##
        }
        ### rtmp dash end ###########################################

        ### rtmp hls start ##########################################
        application hls {
            # Live settings: https://github.com/arut/nginx-rtmp-module/wiki/Directives#live
            live on;                 # live mode (one-to-many)
            record off;              # turn off recording to flv

            # Access settings: https://github.com/arut/nginx-rtmp-module/wiki/Directives#access
            allow publish 127.0.0.1;
            allow publish 172.17.0.0/16;
            deny publish all;
            deny play all;           # disable directly consuming through rtmp

            # hls settings: https://github.com/arut/nginx-rtmp-module/wiki/Directives#hls
            hls on;                  # enable hls
            hls_path /tmp/hls;       # hls fragments path
            hls_nested on;           # one subdirectory for each stream
            hls_fragment 2;          # length of hls fragment in sec
            hls_playlist_length 20;  # length of hls playlist in sec
            hls_cleanup on;          # use nginx cache manager to remove old fragments
        }
        #### rtmp hls end ###########################################
}

# vim: set et noai ts=4 sw=4:
